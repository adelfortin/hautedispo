---
- name: Configure network and user settings
hosts: all
become: true
vars:
ancienne_adresse: "{{ hostvars[inventory_hostname]['ansible_default_ipv4']['address'] }}"
adresse_ipv4_numero_zero: "192.168.82.1"
interface_zero: "enp0s3"
adresse_ipv4_numero_une: "192.168.82.1"
interface_une: "enp0s8"
adresse_ipv4_numero_deux: "192.168.83.2"
interface_deux: "enp0s9"
adresse_ipv4_numero_trois: "192.168.84.1"
interface_trois: "enp0s10"
hostname_machine_une: "haproxyserver1"
tasks:
- name: Copy SSH key to remote server
ansible.builtin.command: ssh-copy-id root@{{ ancienne_adresse }}

- name: Configure first interface
ansible.builtin.command: nmcli connection add type ethernet con-name INTERNET ifname {{ interface_zero }} ipv4.method auto

- name: Configure second interface
ansible.builtin.command: nmcli connection add type ethernet con-name INTERNET ifname {{ interface_une }} ipv4.addresses {{ adresse_ipv4_numero_une }}/24 ipv4.method manual

- name: Configure third interface
ansible.builtin.command: nmcli connection add type ethernet con-name INTERNET ifname {{ interface_deux }} ipv4.addresses {{ adresse_ipv4_numero_deux }}/24 ipv4.method manual

- name: Configure fourth interface
ansible.builtin.command: nmcli connection add type ethernet con-name INTERNET ifname {{ interface_trois }} ipv4.addresses {{ adresse_ipv4_numero_trois }}/24 ipv4.method manual

- name: Execute transformer_en_routeur.sh script
ansible.builtin.command: chmod o+x /transformer_en_routeur.sh
become: true

- name: Execute transformer_en_routeur.sh script
ansible.builtin.command: ./transformer_en_routeur.sh

- name: Enable IP forwarding
ansible.builtin.command: sysctl -p /etc/sysctl.d/forward.conf

- name: Create new user and generate SSH key
ansible.builtin.user:
name: "{{ hostname_machine_une }}"
shell: /bin/bash
groups: "{{ hostname_machine_une }},wheel"
generate_ssh_key: yes
ssh_key_bits: 2048
ssh_key_file: .ssh/id_rsa

- name: Set password for new user
ansible.builtin.command: echo "{{ hostname_machine_une }}"|passwd --stdin {{ hostname_machine_une }}

- name: Move SSH config file to new user's home directory
ansible.builtin.command: mv sshconfig /home/{{ hostname_machine_une }}/.ssh/config

# Configuration et installation de DNF et EPEL
    - name: CONFIG DNF | Ajout du proxy dans le fichier de configuration de dnf
      lineinfile:
        path: /etc/dnf/dnf.conf
        line: proxy=http://proxy.infra.dgfip:3128

    - name: INSTALL git
      dnf:
        name: git

    - name: CONFIG LE PROXY POUR GITHUB
      ansible.builtin.command: git config --global http.proxy http://proxy.infra.dgfip:3128

    - name: Récupére l'utilisateur courant
      ansible.builtin.command: whoami
      register: username
      become_user: "{{ ansible_facts.hostname }}"

    - name: vérifie que la valeur est bien enregistré
      ansible.builtin.debug:
        var: username.stdout

    - name: Copier les polices de caractère sur la machine
      ansible.builtin.git:
        repo: https://github.com/adelfortin/fontspowerline
        dest: /home/{{ username.stdout }}/.fonts/ 
        clone: yes
        update: yes

    - name: Installe les polices de caractères sur la machine
      ansible.builtin.command: bash /home/{{ username.stdout }}/.fonts/install.sh

  
    - name: Installe les prompt personnalisé 
      ansible.builtin.git:
        repo: https://github.com/adelfortin/exportation
        dest: /home/{{ username.stdout }}/.bash/themes/agnoster-bash/
        clone: yes
        update: yes

    - name: CREATION DES DOSSIERS POUR ROOT
      ansible.builtin.file:
        path: /root/.bash/themes/agnoster-bash
        state: directory

    - name: Déplace le fichier de configuation BASHRC au bon endroit
      ansible.builtin.command: mv /home/{{ username.stdout }}/.bash/themes/agnoster-bash/.bashrc /home/{{ username.stdout }}/.bashrc

    - name: Installation du theme du prompt de root
      ansible.builtin.command: cp -f /home/{{ username.stdout }}/.bash/themes/agnoster-bash/agnoster.bash /root/.bash/themes/agnoster-bash/
    
    - name: Préparation du .bashrc de root
      ansible.builtin.command: cp /home/{{ username.stdout }}/.bashrc /root/
      
       - name: CREATION DES DOSSIERS POUR LA CONFIG SSH
      ansible.builtin.file:
        path: home/{{ username.stdout }}/
        state: directory
      
      - name: Déplace le fichier de configuation des connexions SSH au bon endroit
      ansible.builtin.command: mv /home/{{ username.stdout }}/.bash/themes/agnoster-bash/.configrouteur /home/{{ username.stdout }}/.ssh/config
